% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Model.R
\name{Model}
\alias{Model}
\alias{format.Model}
\alias{print.Model}
\alias{sample_prior.Model}
\alias{sample_posterior.Model}
\alias{sample_predictive.Model}
\alias{impute.Model}
\alias{parameter_sample_to_tibble.Model}
\alias{plot_mstate.Model}
\alias{sample_pfs_rate.Model}
\alias{visits_to_mstate.Model}
\title{An abstract multi-state model class}
\usage{
\method{format}{Model}(x, ...)

\method{print}{Model}(x, ...)

\method{sample_prior}{Model}(
  model,
  nsim = 2000L,
  seed = NULL,
  warmup = 500L,
  pars = attr(model, "parameter_names"),
  nuts_control = list(),
  ...
)

\method{sample_posterior}{Model}(
  model,
  data,
  nsim = 2000L,
  seed = NULL,
  warmup = 500L,
  nuts_control = list(),
  pars = attr(model, "parameter_names"),
  ...
)

\method{sample_predictive}{Model}(
  model,
  n_per_group,
  sample = NULL,
  nsim = 100L,
  seed = NULL,
  nsim_parameters = 1000L,
  warmup_parameters = 250,
  as_mstate = FALSE,
  nuts_control = list(),
  ...
)

\method{impute}{Model}(
  model,
  data,
  nsim,
  n_per_group = NULL,
  now = NULL,
  seed = NULL,
  recruitment_rates = attr(model, "recruitment_rate"),
  sample = NULL,
  nsim_parameters = 1000L,
  warmup_parameters = 250L,
  nuts_control = list(),
  ...
)

\method{parameter_sample_to_tibble}{Model}(model, sample, ...)

\method{plot_mstate}{Model}(data, model, now, relative_to_sot, ...)

\method{sample_pfs_rate}{Model}(
  model,
  t,
  sample = NULL,
  warmup = 500L,
  nsim = 2000L,
  seed = NULL,
  ...
)

\method{visits_to_mstate}{Model}(
  tbl_visits,
  model,
  now = max(tbl_visits$t),
  eof_indicator = "EOF"
)
}
\arguments{
\item{x}{Model to print}

\item{...}{further arguments passed to method implementations}

\item{model}{a model of class "Model"}

\item{nsim}{number of samples to draw}

\item{seed}{integer, fixed random seed; NULL for no fixed seed}

\item{warmup}{integer, number of warmup samples for the rstan sampler before retaining samples; these are used to
tune the hyperparameters of the MCMC algorithm.}

\item{pars}{character vector of parameter names to sample; resorting to model defaults if NULL}

\item{nuts_control}{control parameters for NUTS algorithm see \code{\link[rstan:stan]{rstan::stan()}}}

\item{data}{a data frame with variables "subject_id", "group_id", "t_recruitment", "dt1" and "dt2"
where dt1 is the minimal and dt2 the maximal time to the event in question.
If both are Inf, the individual has not and will never experience the event.
If dt1 < Inf but dt2 == Inf the individual is still at risk.
"t_recruitment", "dt1" and "dt2" can also be missing if individual is not yet recruited.}

\item{n_per_group}{integer vector with number of individuals per group.}

\item{sample}{a stanfit object containing samples. These parameter samples
represent the parameter distribution over which the predictive distribution
averages. Technically, the parameters are resampled with replacement from
this sample to match the desired number of imputations.}

\item{nsim_parameters}{integer, number of parameter samples}

\item{warmup_parameters}{integer, number of warmup samples for the rstan sampler before retaining samples of the parameters.}

\item{as_mstate}{return data in multi-state forma, see \code{\link[=visits_to_mstate]{visits_to_mstate()}}}

\item{now}{exact time point relative to start of the trial}

\item{recruitment_rates}{vector of recruitment rates}

\item{relative_to_sot}{Boolean, should the timeline be relative to the start
of trial or the start of treatment for each individual}

\item{t}{a vector of time-points at which the PFS rate should be computed}

\item{tbl_visits}{visit data in long format}

\item{eof_indicator}{state name indicating (exactly observed) end of
follow up.}
}
\description{
This is abstract class defining a standard set of methods for any implemented
multi-state model.
Objects of class 'Model' cannot be instantiated directly, only objects of
the respective sub-classes can be.
}
\seealso{
\link{srp_model}
}
